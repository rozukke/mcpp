<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classmcpp_1_1Coordinate" xml:lang="en-US">
<title>mcpp::Coordinate Class Reference</title>
<indexterm><primary>mcpp::Coordinate</primary></indexterm>
<para>
<computeroutput>#include &lt;util.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classmcpp_1_1Coordinate_1aff4ff630ed0339920f6b2a8aec4cc1f6">Coordinate</link> (int x=0, int y=0, int z=0)</para>

<para>Constructs a <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> object with integer values. </para>
</listitem>
            <listitem><para><link linkend="_classmcpp_1_1Coordinate_1a34576700734a152d519f3f9d56062899">Coordinate</link> (double x, double y, double z)</para>

<para>Constructs a <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> object with double values. </para>
</listitem>
            <listitem><para><link linkend="_classmcpp_1_1Coordinate">Coordinate</link> <link linkend="_classmcpp_1_1Coordinate_1a00d47c3ceaa12d83ebf3fd970963ae0b">operator+</link> (const <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> &amp;obj) const</para>

<para>Adds two <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> objects. </para>
</listitem>
            <listitem><para>bool <link linkend="_classmcpp_1_1Coordinate_1aea212ae040336d2e0b46c82e605fada6">operator==</link> (const <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> &amp;obj) const</para>

<para>Checks if two <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> objects are equal. </para>
</listitem>
            <listitem><para>bool <link linkend="_classmcpp_1_1Coordinate_1a7642ebe18537052edfbe717bfd2e31ad">operator!=</link> (const <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> &amp;obj) const</para>

<para>Checks if two <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> objects are not equal. </para>
</listitem>
            <listitem><para><link linkend="_classmcpp_1_1Coordinate">Coordinate</link> <link linkend="_classmcpp_1_1Coordinate_1a51ef2fc83cf330cb0cea41ffb08c7169">operator-</link> (const <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> &amp;obj) const</para>

<para>Subtracts one <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> object from another. </para>
</listitem>
            <listitem><para><link linkend="_classmcpp_1_1Coordinate">Coordinate</link> <link linkend="_classmcpp_1_1Coordinate_1a815583c0aa75db7f00505f451267a684">clone</link> () const</para>

<para>Creates a copy of the <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> object. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classmcpp_1_1Coordinate_1af2639ac79be2a9c59a7eb0afe4ea7681"/>int <emphasis role="strong">x</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classmcpp_1_1Coordinate_1a42df473fa613ffb3718d9dc38845b0a8"/>int <emphasis role="strong">y</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classmcpp_1_1Coordinate_1a57ec8f7c3ed4be2eacc3364eb578eca5"/>int <emphasis role="strong">z</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para>std::ostream &amp; <link linkend="_classmcpp_1_1Coordinate_1a8f16cf7216f2a8143e01c389e11e2a68">operator&lt;&lt;</link> (std::ostream &amp;out, const <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> &amp;coord)</para>

<para>Outputs the <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> object to an ostream. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Represented using integers since sub-unit coordinates are not of particular relevance. Allows for operations such as addition between coordinates. </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classmcpp_1_1Coordinate_1aff4ff630ed0339920f6b2a8aec4cc1f6"/>    <section>
    <title>Coordinate()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Coordinate</primary><secondary>mcpp::Coordinate</secondary></indexterm>
<indexterm><primary>mcpp::Coordinate</primary><secondary>Coordinate</secondary></indexterm>
<para><computeroutput>mcpp::Coordinate::Coordinate (int x = <computeroutput>0</computeroutput>
, int y = <computeroutput>0</computeroutput>
, int z = <computeroutput>0</computeroutput>
)<computeroutput>[explicit]</computeroutput></computeroutput></para><para>

<para>Constructs a <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> object with integer values. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>x</entry>
                                <entry>
<para>The x-coordinate. Default is 0. </para>
</entry>
                            </row>
                            <row>
                                <entry>y</entry>
                                <entry>
<para>The y-coordinate. Default is 0. </para>
</entry>
                            </row>
                            <row>
                                <entry>z</entry>
                                <entry>
<para>The z-coordinate. Default is 0. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_classmcpp_1_1Coordinate_1a34576700734a152d519f3f9d56062899"/>    <section>
    <title>Coordinate()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Coordinate</primary><secondary>mcpp::Coordinate</secondary></indexterm>
<indexterm><primary>mcpp::Coordinate</primary><secondary>Coordinate</secondary></indexterm>
<para><computeroutput>mcpp::Coordinate::Coordinate (double x, double y, double z)</computeroutput></para><para>

<para>Constructs a <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> object with double values. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>x</entry>
                                <entry>
<para>The x-coordinate as a double. </para>
</entry>
                            </row>
                            <row>
                                <entry>y</entry>
                                <entry>
<para>The y-coordinate as a double. </para>
</entry>
                            </row>
                            <row>
                                <entry>z</entry>
                                <entry>
<para>The z-coordinate as a double. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classmcpp_1_1Coordinate_1a815583c0aa75db7f00505f451267a684"/>    <section>
    <title>clone()</title>
<indexterm><primary>clone</primary><secondary>mcpp::Coordinate</secondary></indexterm>
<indexterm><primary>mcpp::Coordinate</primary><secondary>clone</secondary></indexterm>
<para><computeroutput><link linkend="_classmcpp_1_1Coordinate">Coordinate</link> mcpp::Coordinate::clone ( ) const</computeroutput></para><para>

<para>Creates a copy of the <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> object. </para>
</para>

<para><formalpara><title>Returns</title>

<para>A new <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> object that is a copy of the current object. </para>
</formalpara>
</para>
    </section><anchor xml:id="_classmcpp_1_1Coordinate_1a7642ebe18537052edfbe717bfd2e31ad"/>    <section>
    <title>operator!=()</title>
<indexterm><primary>operator!=</primary><secondary>mcpp::Coordinate</secondary></indexterm>
<indexterm><primary>mcpp::Coordinate</primary><secondary>operator!=</secondary></indexterm>
<para><computeroutput>bool mcpp::Coordinate::operator!= (const <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> &amp; obj) const</computeroutput></para><para>

<para>Checks if two <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> objects are not equal. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>obj</entry>
                                <entry>
<para>The <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> object to compare with. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>True if the coordinates are not equal, false otherwise. </para>
</formalpara>
</para>
    </section><anchor xml:id="_classmcpp_1_1Coordinate_1a00d47c3ceaa12d83ebf3fd970963ae0b"/>    <section>
    <title>operator+()</title>
<indexterm><primary>operator+</primary><secondary>mcpp::Coordinate</secondary></indexterm>
<indexterm><primary>mcpp::Coordinate</primary><secondary>operator+</secondary></indexterm>
<para><computeroutput><link linkend="_classmcpp_1_1Coordinate">Coordinate</link> mcpp::Coordinate::operator+ (const <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> &amp; obj) const</computeroutput></para><para>

<para>Adds two <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> objects. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>obj</entry>
                                <entry>
<para>The <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> object to add. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>A new <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> object representing the sum of the two coordinates. </para>
</formalpara>
</para>
    </section><anchor xml:id="_classmcpp_1_1Coordinate_1a51ef2fc83cf330cb0cea41ffb08c7169"/>    <section>
    <title>operator-()</title>
<indexterm><primary>operator-</primary><secondary>mcpp::Coordinate</secondary></indexterm>
<indexterm><primary>mcpp::Coordinate</primary><secondary>operator-</secondary></indexterm>
<para><computeroutput><link linkend="_classmcpp_1_1Coordinate">Coordinate</link> mcpp::Coordinate::operator- (const <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> &amp; obj) const</computeroutput></para><para>

<para>Subtracts one <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> object from another. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>obj</entry>
                                <entry>
<para>The <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> object to subtract. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>A new <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> object representing the difference between the two coordinates. </para>
</formalpara>
</para>
    </section><anchor xml:id="_classmcpp_1_1Coordinate_1aea212ae040336d2e0b46c82e605fada6"/>    <section>
    <title>operator==()</title>
<indexterm><primary>operator==</primary><secondary>mcpp::Coordinate</secondary></indexterm>
<indexterm><primary>mcpp::Coordinate</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput>bool mcpp::Coordinate::operator== (const <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> &amp; obj) const</computeroutput></para><para>

<para>Checks if two <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> objects are equal. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>obj</entry>
                                <entry>
<para>The <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> object to compare with. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>True if the coordinates are equal, false otherwise. </para>
</formalpara>
</para>
</section>
</section>
<section>
<title>Friends And Related Function Documentation</title>
<anchor xml:id="_classmcpp_1_1Coordinate_1a8f16cf7216f2a8143e01c389e11e2a68"/>    <section>
    <title>operator&lt;&lt;</title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>mcpp::Coordinate</secondary></indexterm>
<indexterm><primary>mcpp::Coordinate</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<para><computeroutput>std::ostream&amp; operator&lt;&lt; (std::ostream &amp; out, const <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> &amp; coord)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Outputs the <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> object to an ostream. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>out</entry>
                                <entry>
<para>The output stream. </para>
</entry>
                            </row>
                            <row>
                                <entry>coord</entry>
                                <entry>
<para>The <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> object to output. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The output stream with the <link linkend="_classmcpp_1_1Coordinate">Coordinate</link> object&apos;s values. </para>
</formalpara>
</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
include/mcpp/<link linkend="_util_8h">util.h</link></section>
</section>
